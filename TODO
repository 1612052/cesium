*** should last row of availability just indicate if it has a child in those spots (to know if 0 sse or not)
and also indicate the external availability as normal but last row can't init tiles like the rest
of the subtree
*** only real reason to do the above is if 0 sse is really important and can't get rid of it
    I don't think you absolutely need 0 sse in the leaves, since there're examples working


[ ] External tilesets
   leaf tile holds a subtree resource, makes a request for the subtree when the tile request goes out as well
   THIS IS ASYNC AND WILL BE BAD WHEN DOING JUST ARRAYS SINCE YOU NEED TO MUTEX ALL ACCESS TO THE MAP
   WITH TREES BEFORE YOU DON"T SINCE EDITING THE TREE IS OK

   and make subtree requests higher priority (add a digit)
   so a tile can have a _request and a _requestSubtree

   [ ] The subtree might need 2 bits per tile (at least on the last level) to signal an external subtree
   request is needed, otherwise you'll get a bunch of 404 noise in the console
   could specify a maxDepth in the tileset.json but this would force draging out parts of the tree
   all the way down when they don't need to

   [] Get rid of subtree member vars in tile that aren't really needed


[ ] Try to traverse the subtree arrays in tree style (is this a waste of time?)
    NOTE: Not sure about storing subtree refs (don't store for now)
    subtree ref / chilren subtree ref

[ ] toroidial subtree viewer? it's camera relative, right?
[ ] cone tracing?
[ ] look at the sse calculation and see if theres a good way to pre-calc the sse spheres and sphere deltas
[ ] incrementally move components to array style
[ ] try to go full bresenham

[ ] 4 para patent brainstorm write ups for traversal(cone trace?), ray trace,
    give me highest lods in this bounds, and whatever else
